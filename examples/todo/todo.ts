// AUTOGENERATED FILE - DO NOT EDIT

import { Instant } from './todo.external';

export type UUID = string;

export class Todo {
  id: UUID;
  title: string;
  createdAt: Instant;
  checkedAt: Instant | null;
}

export class CreateTodoParams {
  title: string;
}

export class UpdateTodoParams {
  title: string | null;
}

export class TodoServiceConsumer {
  constructor(
    protected request: (method: string, inputs: any) => Promise<any>
  ) {}

  create(params: CreateTodoParams): Promise<Todo> {
    return this.request("create", { params });
  }

  get(id: UUID): Promise<Todo> {
    return this.request("get", { id });
  }

  getAll(): Promise<(Todo[])> {
    return this.request("getAll", {  });
  }

  update(id: UUID, params: UpdateTodoParams): Promise<Todo> {
    return this.request("update", { id, params });
  }

  delete(id: UUID): Promise<void> {
    return this.request("delete", { id });
  }
}

export interface TodoServiceProvider {
  create(params: CreateTodoParams): Promise<Todo>;

  get(id: UUID): Promise<Todo>;

  getAll(): Promise<(Todo[])>;

  update(id: UUID, params: UpdateTodoParams): Promise<Todo>;

  delete(id: UUID): Promise<void>;
}

// prettier-ignore
export const $schema = {models:{Instant:{type:'external',inner:type:'string',data:{}},UUID:{type:'alias',inner:type:'string',data:{type:'uuid'}},Todo:{type:'struct',fields:{id:{type:'reference',name:'UUID',data:{}},title:{type:'string',data:{}},createdAt:{type:'reference',name:'Instant',data:{}},checkedAt:{type:'nullable',inner:{type:'reference',name:'Instant'},data:{}}}},CreateTodoParams:{type:'struct',fields:{title:{type:'string',data:{}}}},UpdateTodoParams:{type:'struct',fields:{title:{type:'nullable',inner:{type:'string'},data:{}}}}},services:{TodoService:{type:'service',methods:{create:{inputs:{params:{type:'reference',name:'CreateTodoParams',data:{}}},output:{type:'reference',name:'Todo',data:{}}},get:{inputs:{id:{type:'reference',name:'UUID',data:{}}},output:{type:'reference',name:'Todo',data:{}}},getAll:{inputs:{},output:{type:'list',inner:{type:'reference',name:'Todo'},data:{}}},update:{inputs:{id:{type:'reference',name:'UUID',data:{}},params:{type:'reference',name:'UpdateTodoParams',data:{}}},output:{type:'reference',name:'Todo',data:{}}},delete:{inputs:{id:{type:'reference',name:'UUID',data:{}}},output:{type:'unit',data:{}}}}}}} as const;